package cs1302.p2;

import cs1302.effects.Artsy;
import javafx.scene.image.Image;
import javafx.scene.image.PixelWriter;
import javafx.scene.image.PixelReader;
import javafx.scene.image.WritableImage;
import java.lang.Math;
import java.lang.IndexOutOfBoundsException;

public class MyArtsy implements Artsy {

    @Override
    public Image doCheckers(Image src1, Image src2, int size) {

	int row = size;
	int col = size;

	WritableImage ret = new WritableImage(300,300);
	
	PixelReader pr1 = src1.getPixelReader();
	PixelReader pr2 = src2.getPixelReader();
	PixelReader prRet = ret.getPixelReader();

	PixelWriter pw = ret.getPixelWriter();

	for(int x = 0; x < 300; ++x){
	    for(int y = 0; y < 300; ++y){

		pw.setArgb(x, y, pr1.getArgb(x,y));
	    }
	   
	}
	
	//places horizontal stripes
	do{
	    for(int x = 0; x < size; ++x){
		for(int y = 0; y < 300; ++y){
		    pw.setArgb(y, col, pr2.getArgb(y, col));
		}
		col++;
	    }
	    col += size;

	}while(col < 300);
	
	//places vertical stripes
	do{
	    for(int x = 0; x < size; ++x){
		for(int y = 0; y < 300; ++y){
		    if(prRet.getArgb(row,y) ==  pr1.getArgb(row,y)){
		    pw.setArgb(row, y, pr2.getArgb(row, y));
		    }
		    else pw.setArgb(row, y, pr1.getArgb(row,y));
		}
		row++;
	    }
	    row += size;
	}while(row < 300);
	 
	    return ret;
	

    } // doCheckers

    @Override
    public Image doVerticalStripes(Image src1, Image src2, int width) {
	
	int row = width;
	int col = width;

	WritableImage ret = new WritableImage(300,300);
	
	PixelReader pr1 = src1.getPixelReader();
	PixelReader pr2 = src2.getPixelReader();

	PixelWriter pw = ret.getPixelWriter();

	for(int x = 0; x < 300; ++x){
	    for(int y = 0; y < 300; ++y){

		pw.setArgb(x, y, pr1.getArgb(x,y));
	    }
	}

	do{
	    for(int x = 0; x < width; ++x){
		for(int y = 0; y < 300; ++y){
		    pw.setArgb(row, y, pr2.getArgb(row, y));
		}
		row++;
	    }
	    row += width;
	}while(row < 300);
	 
	    return ret;
	    
    } // doVerticalStripes

    @Override
    public Image doRotate(Image src, double degrees) {

	int center = 150;

	double x1, y1;
	int xx, yy;
	int xI, yI;
	double rad = (degrees * Math.PI) / 180;
	
	WritableImage ret = new WritableImage(300,300);
	PixelReader pr = src.getPixelReader();
	PixelWriter pw = ret.getPixelWriter();

	for(int y = 0; y < 300; ++y){
	    for(int x = 0; x < 300; ++x){
		
		
		

	       	//xx = (int)((x * Math.cos(degrees)) - (y * Math.sin(degrees)));
		//yy = (int)((x * Math.sin(degrees)) + (y * Math.cos(degrees)));
		

		//xx = (int)(((x - src.getWidth() / 2) * Math.cos(degrees)) - ((y - src.getHeight() / 2) * Math.sin(degrees)) + src.getWidth() / 2);
		//yy = (int)(((x - src.getWidth() / 2) * Math.sin(degrees)) + ((y - src.getHeight() / 2) * Math.cos(degrees)) + src.getWidth() / 2);
		
		
		xI = (int)(((x - src.getWidth() / 2) * Math.cos(rad)) - ((y - src.getHeight() / 2) * Math.sin(rad)) + src.getWidth() / 2);
		yI = (int)(((x - src.getWidth() / 2) * Math.sin(rad)) + ((y - src.getHeight() / 2) * Math.cos(rad)) + src.getWidth() / 2);

		try{
		    pw.setArgb(x, y, pr.getArgb(xI,yI));
		    //pw.setArgb(x, y, pr.getArgb(xx, yy));

		
		}catch(IndexOutOfBoundsException e){
		    continue;
		}
		

	    }
	}


    
	return ret;

    } // doRotate

    @Override
    public Image doHorizontalStripes(Image src1, Image src2, int height) {

	int row = height;
	int col = height;

	WritableImage ret = new WritableImage(300,300);
	
	PixelReader pr1 = src1.getPixelReader();
	PixelReader pr2 = src2.getPixelReader();

	PixelWriter pw = ret.getPixelWriter();

	for(int x = 0; x < 300; ++x){
	    for(int y = 0; y < 300; ++y){

		pw.setArgb(x, y, pr1.getArgb(x,y));
	    }
	}

	do{
	    for(int x = 0; x < height; ++x){
		for(int y = 0; y < 300; ++y){
		    pw.setArgb(y, col,  pr2.getArgb(y, col));
		}
		col++;
	    }
	    col += height;

	}while(col < 300);
	 
	    return ret;

    } // doHorizontalStripes

} // MyArtsy


